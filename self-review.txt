When reflecting on this homework, we feel as though we were able to learn a lot from seeing how others approached this problem. I think it was a clever way to not just be exposed to different approaches but also an opportunity to see the modularity of our code. We were fortunate that we did not have to make many if any adjustments for our customers which I feel is a good sign in regards to how they were able to effectively combine our code with theirs. Looking at our code specifically, some aspects of our view could have been cleaned up further. One specific example is with our “making move from human input method”. We unnecessarily abstracted the functionality of acquiring the coordinates of a selected hexagon which led to some problems later in the homework. For this reason it had to be changed and might not be the same as the code provider to our customers (we simply just combined our getSelectedHexagon method into our confirm move method which now takes in the coordinates as parameters which much improves our code’s usability). One other thing that I wish we did better was the way we used our Observer pattern implementation. Initially, when dealing with the handling of turns when playing against an AI, we relied too heavily on one “notifier method”. Adding a second notifier to our model to specifically handle the notification of turns being changed, helped the controllers much better interact with the game flow. One more thing that became apparent was that there were areas where code was reused and could have been consolidated into helper methods for code reusability and improved readability. In regards to the assignment as a whole, we found this to be a cool experience. We were very lucky that our providers were very open to communication and were really helpful in explaining their code to us. Not only this but it was also really awesome to see how despite being completely built from scratch, by following key OOD principles our code can be combined with other code, again despite it being built completely separately. 
